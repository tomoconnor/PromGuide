package eu.astound.promguide;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONTokener;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Toast;

public class PromPersonGuideActivity extends Activity{
	public static String PERSON_GUIDE_ID = "eu.astound.promguide.PromPersonGuideActivity.PERSON_GUIDE_ID";
	private PersonList thisList;
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	public void onCreate(Bundle savedInstanceState) {
	  super.onCreate(savedInstanceState);
	  setContentView(R.layout.person_guide);
	  String guideIdentifier = getIntent().getStringExtra(PERSON_GUIDE_ID);
	  
	  TextView txtTitle = (TextView) findViewById(R.id.txtTitle);
	  ListView personList = (ListView) findViewById(R.id.personList);
	  
	  txtTitle.setText(guideIdentifier + " List");
	  this.thisList = this.fetchPersonList(guideIdentifier);
	  personList.setAdapter(new ArrayAdapter(this,R.layout.list_item,this.thisList));
	  
	  
	  personList.setTextFilterEnabled(true);
	  
	  personList.setOnItemClickListener(new OnItemClickListener() {
	    public void onItemClick(AdapterView<?> parent, View view,
	        int position, long id) {
	    	personClick(view, position, id);
	        }
	  });
	}
	
	public void personClick(View view, int position, long id){
		//Toast.makeText(getApplicationContext(), "", Toast.LENGTH_SHORT).show();
		Person thisPerson = this.thisList.get(position);
		Intent i = new Intent(view.getContext(),PromBrowserActivity.class);
		i.putExtra("eu.astound.promguide.PromBrowserActivity.PROM_URL", thisPerson.getDataURL());
		startActivityForResult(i,0);
		
	}
	
	public PersonList fetchPersonList(String tag){
		PersonList listItems = new PersonList();
		try {
			URL guideURL;

				if(tag.charAt(0) == 'C'){
					guideURL = new URL("http://www.twinhelix.org/media/composers.json");
					Toast.makeText(getApplicationContext(), tag, Toast.LENGTH_SHORT).show();
				}else{
					guideURL = new URL("http://www.twinhelix.org/media/performers.json");
					Toast.makeText(getApplicationContext(), tag, Toast.LENGTH_SHORT).show();

				}
				URLConnection pg = guideURL.openConnection();
				BufferedReader in = new BufferedReader(new InputStreamReader(pg.getInputStream()));
				
					
				String jsonblock = "";
				
				String line;
				while ((line = in.readLine())!= null){
					jsonblock += line;
				}
				JSONTokener jtok = new JSONTokener(jsonblock);
				JSONObject jo = new JSONObject(jtok);
				JSONArray artists = (JSONArray) jo.get("artists");
				
				for (int i=0; i < artists.length(); i++){
					JSONObject xartist = (JSONObject) artists.get(i);
					Person p = new Person(xartist.getString("name"),xartist.getString("url"));
					listItems.add(p);
				}
				
		}catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	return listItems;
	}
	
}
