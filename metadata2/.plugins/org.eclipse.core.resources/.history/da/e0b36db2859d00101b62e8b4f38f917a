package eu.astound.promguide;

import android.os.Bundle;
import android.widget.ListView;
import android.app.ListActivity;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.view.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONTokener;
 
import android.content.Intent;
import eu.astound.promguide.PromList;
public class PromGuideActivity extends ListActivity{
    @SuppressWarnings("rawtypes")
	//public ArrayList promList;
    public PromList promList;
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	public void onCreate(Bundle savedInstanceState) {
	  super.onCreate(savedInstanceState);
	  this.promList = this.fetchPromGuideAsProm();
	  //setListAdapter(new ArrayAdapter<String>(this, R.layout.list_item, COUNTRIES));
	  setListAdapter(new ArrayAdapter(this,R.layout.list_item,this.promList));
	  
	  ListView lv = getListView();
	  lv.setTextFilterEnabled(true);
	  
	  lv.setOnItemClickListener(new OnItemClickListener() {
	    public void onItemClick(AdapterView<?> parent, View view,
	        int position, long id) {
	    	promClick(view, position, id);
	      // When clicked, show a toast with the TextView text
	     
	    	
	    	//String key = (String) ((TextView)view).getText();
	    	//Toast.makeText(getApplicationContext(), key, Toast.LENGTH_SHORT);
	    	
	      //Toast.makeText(getApplicationContext(), ((TextView) view).getText(),
	      //    Toast.LENGTH_SHORT).show();
	    }
	  });
	}
	public void promClick(View view, int position, long id){
		Intent i = new Intent(view.getContext(),PromGuideDetailActivity.class);
		//startActivityForResult(i,0);
		//i.putExtra(name, value)
		//i.putExtra(PromGuideDetailActivity.PROM_ID, position);
		Bundle b = new Bundle();
		b.putParcelable("promslist", this.promList); //Insert list in a Bundle object
 
		i.putExtra("eu.astound.promguide.PromGuideDetailActivity.PROM_ID", position);
        i.putExtra("eu.astound.promguide.PromGuideDetailActivity.PROM_LIST", b);
		i.putExtras(b); //Insert the Bundle object in the Intent' Extras

		startActivityForResult(i,0);
	}
	
	
	/*public ArrayList<String> fetchPromGuide(){
		ArrayList<String> listItems = new ArrayList<String>();
		try {
				URL guideURL = new URL("http://twinhelix.org/media/proms.json");
				URLConnection pg = guideURL.openConnection();
				BufferedReader in = new BufferedReader(new InputStreamReader(pg.getInputStream()));
				
					
				String jsonblock = "";
				
				String line;
				while ((line = in.readLine())!= null){
					jsonblock += line;
				}
				JSONTokener jtok = new JSONTokener(jsonblock);
				JSONObject jo = new JSONObject(jtok);
				JSONArray july = (JSONArray) jo.get("july");
				JSONArray august = (JSONArray) jo.get("august");
				JSONArray september = (JSONArray) jo.get("september");
				for (int i=0; i < july.length(); i++){
					JSONObject prom = (JSONObject) july.get(i);
					listItems.add(prom.getString("name"));
				}
				for (int i=0; i < august.length(); i++){
					JSONObject prom = (JSONObject) august.get(i);
					listItems.add(prom.getString("name"));
				}
				for (int i=0; i < september.length(); i++){
					JSONObject prom = (JSONObject) september.get(i);
					listItems.add(prom.getString("name"));
				}
		}catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	return listItems;
	}
	
	*/
	public PromList fetchPromGuideAsProm(){
		PromList listItems = new PromList();
		try {
				URL guideURL = new URL("http://www.twinhelix.org/media/proms.json");
				URLConnection pg = guideURL.openConnection();
				BufferedReader in = new BufferedReader(new InputStreamReader(pg.getInputStream()));
				
					
				String jsonblock = "";
				
				String line;
				while ((line = in.readLine())!= null){
					jsonblock += line;
				}
				JSONTokener jtok = new JSONTokener(jsonblock);
				JSONObject jo = new JSONObject(jtok);
				JSONArray july = (JSONArray) jo.get("july");
				JSONArray august = (JSONArray) jo.get("august");
				JSONArray september = (JSONArray) jo.get("september");
				for (int i=0; i < july.length(); i++){
					JSONObject xprom = (JSONObject) july.get(i);
					Prom p = new Prom(xprom.getString("name"),xprom.getString("month"),xprom.getString("day"),xprom.getString("year"),xprom.getString("img"),xprom.getString("url"),xprom.getString("description));
					listItems.add(p);
				}
				for (int i=0; i < august.length(); i++){
					JSONObject xprom = (JSONObject) august.get(i);
					Prom p = new Prom(xprom.getString("name"),xprom.getString("month"),xprom.getString("day"),xprom.getString("year"),xprom.getString("img"),xprom.getString("url"),xprom.getString("description));
					listItems.add(p);
				}
				for (int i=0; i < september.length(); i++){
					JSONObject xprom = (JSONObject) september.get(i);
					Prom p = new Prom(xprom.getString("name"),xprom.getString("month"),xprom.getString("day"),xprom.getString("year"),xprom.getString("img"),xprom.getString("url"),xprom.getString("description));
					listItems.add(p);
				}
		}catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	return listItems;
	}
}
